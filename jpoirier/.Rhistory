install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec(name='ir32', displayname='R 3.2')
?read.csv
?apply
?complete.cases
?tapply
library(repr)
install.packages("repr")
install.packages("repr")
install.packages("repr")
library(GGalley)
library(GGally)
install.packages("caret")
install.packages("kernlab")
install.packages("e1071")
?confusionMatrix
library(caret)
?confusionMatrix
?round
?print
install.packages("printr")
install.packages("printr", type="source", repos=c("http://yihui.name/xran", "http://cran.rstudio.com"))
install.packages("pander")
devtools::install_github('Rapporter/pander')
devtools::install_github('Rapporter/pander')
Sys.getenv("R_LIBS_USER")
devtools::install_github('Rapporter/pander')
install.packages("IRdisplay")
library(earth)
install.packages("earth")
library(earth)
data(etitanic)
head(etitanic)
?etitanic
library(caret)
dummies <- dummyVars(survived ~ ., data = etitanic)
dummies
head(predict(dummies, newdata=etitanic))
apply(etitanic, 2, class)
?apply
class(etitanic$age[1])
class(etitanic$age)
apply(etitanic, 2, class)
sapply(etitanic, 2, class)
lapply(etitanic, 2, class)
apply(etitanic, 2, class)
?by
by(etitanic, 2, class)
apply(etitanic, 2, summary)
apply(etitanic, 2, mean)
apply(etitanic, 2, median)
apply(etitanic, 2, count)
apply(etitanic, 2, length)
--version
version
library(maptools)
install.packages("doMC")
install.packages("doMC", repos="http://R-Forge.R-project.org")
x <- cos(1:50)
x
y <- sin(1:50)
ccf(x,y)
ccf <- ccf(x,y)
ccf
?ccf
?log
?which
?ccf
x<-c(T,T,T,T,F,F,F,F,T,T,T,T)
x
as.numeric(x)
?apply
6 % 2
?%
6 %% 2
5 %% 2
0 %% 3
1 %% 23
1 %% 3
2 %% 3
3 %% 3
x <- 5
x %% 3 == 0
x %% 3 == 0 & x != 0
x <- 3
x %% 3 == 0 & x != 0
x <- list("A", "B", "C", "D")
unlist(x)
class(unlist(x))
x
y <- list("E", "F")
c(x, y)
x <- list()
x[["one"]] <- 1
x[["two"]] <- 2
x[["three"]] <- 3
x
unlist(x)
unlist(x)[1]
y
x <- list(1,2,3)
x
c(x,y)
z <- c(x,y)
z
unlist(z)
?aggregate
?scale
x <- c("a", "b", "c", "d", "e")
x
x %in% c("c", "d")
x[x %in% c("c", "d")]
?str
str("a")
a <- as.factor(c("a", "b"))
a
str(a)
x
a
x
y <- c("x", "y", "z")
y
x <- as.factor(x)
x
y <- as.factor(y)
c(x,y)
y
cbind(x,y)
rbind(x,y)
df <- data.frame(x=x)
df2 <- data.frame(y=y)
rbind(df,df2)
levels(df$x)
levels(df$x) <- c(levels(df$x), levels(df$y))
ls
levels(df$x)
levels(df$x) <- c(levels(df$x), "Other")
levels(df$x)
c(levels(df$x), levels(df$y))
levels(df$y)
df
c(levels(df$x), levels(df2$y))
?aggregate
aggregate(cbind(Ozone, Temp) ~ Month, data = airquality, mean)
?reshape
?data.frame
?which
?which.max
?sample
?length
?aggregate
?tapply
?simplify2array
play <- function() {
data <- data.frame(x=rep(1,100), y=rep(2,100))
data$x[25:75] <- NA
print(data)
}
play()
?apply
play <- function() {
data <- data.frame(x=rep(1,100), y=rep(2,100))
data$x[25:75] <- NA
apply(data, 2, sum(is.na(x)))
}
play()
apply(data, 2, function(x) {sum(is.na(x))})
play <- function() {
data <- data.frame(x=rep(1,100), y=rep(2,100))
data$x[25:75] <- NA
apply(data, 2, function(x) {sum(is.na(x))})
}
play()
play <- function() {
data <- data.frame(x=rep(1,100), y=rep(2,100))
data$x[25:75] <- NA
apply(data, 2, function(x) {sum(is.na(x))==0})
}
play()
combn(letters[1:4], 2)
methods <- c("mean", "median", "special")
p <- c(.1,10,100)
w <- c(1,2,5)
c <- c(-1,0,1)
?expand.grid
methods <- as.factor(methods)
p <- as.factor(p)
w <- as.facotr(w)
w <- as.factor(w)
c <- as.factor(c)
expand.grid(methods, p, w, c)
as.data.frame(expand.grid(methods, p, w, c))
as.data.frame(expand.grid(method=methods, p=p, w=w, c=c))
library(nnet)
t1 <- Sys.time()
t2 <- Sys.time()
t2-t1
install.packages("RWeka")
install.packages("RWeka")
library(RWeka)
library(rJava)
install.packages("rJava")
library(rJava)
version
?train
library(caret)
?train
install.packages("randomForest")
install.packages("RSNNS")
install.packages("FCNN4R")
install.packages("ada")
library(dplyr)
?sample_n
install.packages("fastICA")
?prcomp
install.packages("zoo")
library(zoo)
x <- c(1,2,3,4,5,6,7,8,9,10)
rollmedian(x,5)
rollmedian(x,5,na.pad=T)
x <- c(2,4,2,4,2,4)
filter(x, c(.25,.5,.25), method="convolution")
filter(x, c(.25,.5,.25), method="convolution", circular=TRUE)
df$x <- x
df <- data.frame()
df$x <- x
x
y <- filter(x, c(.25,.5,.25), method="convolution", circular=TRUE)
y
as.data.frame(y)
df$x <- as.data.frame(x)
df
df <- data.frame(x=x)
df
df$y <- y
df
y
y <- filter(x, c(.25,.5,.25), method="convolution", circular=TRUE)
y <- filter(x, c(.1,.8,.1), method="convolution", circular=TRUE)
y
play <- function() {
data <- read.csv("../facies_vectors.csv")
head(data)
}
play()
setwd("C:/Papers/2016-ml-contest/jpoirier")
play()
?ggplot
library(ggplot)
library(ggplot2)
?ggplot
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10))
save_plot(g, "well_i.png")
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10))
save_plot("well_i.png", g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10))
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies))
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_color_discrete()
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_color_discrete()
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_fill_manual(values=facies_colors, drop=F, labels=facies_labels) +
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_fill_manual(values=facies_colors, drop=F, labels=facies_labels)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
levels(data_i$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_fill_manual(values=facies_colors, drop=F, labels=facies_labels)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data_i$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, fill=Facies)) + scale_fill_manual(values=facies_colors, drop=F, labels=facies_labels)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, fill=Facies)) + scale_fill_manual(values=facies_colors, drop=F, labels=facies_labels)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) + scale_color_manual(values=facies_colors, drop=F, labels=facies_labels)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
xlim(0,50) + ylim(0,1)
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
if (sum(!is.na(data_i$PE)) == nrow(data_i)) {
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies, size=PE)) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
xlim(0,50) + ylim(0,1)
} else {
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
xlim(0,50) + ylim(0,1)
}
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
if (sum(!is.na(data_i$PE)) == nrow(data_i)) {
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies, size=PE), alpha=.5) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
xlim(0,50) + ylim(0,1)
} else {
g <- ggplot(data=data_i) + geom_point(aes(x=PHIND, y=ILD_log10, color=Facies)) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
xlim(0,50) + ylim(0,1)
}
save_plot(paste0(well_i, ".png"), g)
}
}
play()
play <- function() {
library(ggplot2)
library(cowplot)
data <- read.csv("../facies_vectors.csv")
data$Facies <- as.factor(data$Facies)
wells <- unique(data$Well.Name)
levels(data$Facies) <- c("SS", "CSiS", "FSiS", "SiSh", "MS", "WS", "D", "PS", "BS")
facies_colors <- c('#F4D03F', '#F5B041', '#DC7633', '#6E2C00', '#1B4F72', '#2E86C1', '#AED6F1', '#A569BD', '#196F3D')
facies_labels <- c('SS', 'CSiS', 'FSiS', 'SiSh', 'MS', 'WS', 'D', 'PS', 'BS')
for (well_i in wells) {
data_i <- data[data$Well.Name == well_i,]
if (sum(!is.na(data_i$PE)) == nrow(data_i)) {
g <- ggplot(data=data_i) + geom_point(aes(x=DeltaPHI, y=ILD_log10, color=Facies, size=PE), alpha=.5) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
ylim(0,1)
} else {
g <- ggplot(data=data_i) + geom_point(aes(x=DeltaPHI, y=ILD_log10, color=Facies)) +
scale_color_manual(values=facies_colors, drop=F, labels=facies_labels) +
ylim(0,1)
}
save_plot(paste0(well_i, ".png"), g)
}
}
play()
